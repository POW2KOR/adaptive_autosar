FROM artifact.swf.daimler.com/adasdai-docker/nvidia/drive/build_driveos_linux_pdk:common-5.2.3.0

ARG BUILD_USER="root"
ARG BUILD_DOCKER_GID

RUN  mkdir -p /usr/tools/bazel/
COPY devops/docker/configuration/docker-apt.key.pub /tmp/
COPY devops/docker/configuration/requirement.txt /${BUILD_USER}/
COPY devops/docker/configuration/known_hosts /${BUILD_USER}/.ssh/
COPY ./tools/bazel/ /usr/tools/bazel/
RUN  mkdir -p /usr/packageList
COPY devops/docker/scripts/package_in_html.py /usr/packageList/


USER root

RUN if [ -z $BUILD_DOCKER_GID ]; then echo "DOCKER GID will not set to system ones"; else groupadd -g $BUILD_DOCKER_GID docker ; fi && \
    echo "deb https://download.docker.com/linux/ubuntu/ bionic stable" >> /etc/apt/sources.list && \
    apt-key add /tmp/docker-apt.key.pub && \
    apt-get --assume-yes  update && \
    apt-get --assume-yes install zip=3.0-11build1 \
    bash-completion=1:2.8-1ubuntu1 \
    clang=1:6.0-41~exp5~ubuntu1 \
    clang-format-7=1:7-3~ubuntu0.18.04.1 \
    clang-10=1:10.0.0-4ubuntu1~18.04.2 \
    clang-tools-10=1:10.0.0-4ubuntu1~18.04.2 \
    clang-tidy-10=1:10.0.0-4ubuntu1~18.04.2 \
    clangd-10=1:10.0.0-4ubuntu1~18.04.2 \
    curl=7.58.0-2ubuntu3.13 \
    docker-ce=5:20.10.5~3-0~ubuntu-bionic  \
    git-lfs=2.3.4-1 \
    graphviz=2.40.1-2 \
    iputils-arping=3:20161105-1ubuntu3 \
    iputils-ping=3:20161105-1ubuntu3 \
    lcov=1.13-3 \
    openjdk-8-jdk=8u292-b10-0ubuntu1~18.04 \
    python3-pip=9.0.1-2.3~ubuntu1.18.04.4  \
    python3-dev=3.6.7-1~18.04  \
    python3-git=2.1.8-1 \
    python3-setuptools=39.0.1-2 \
    python3-venv=3.6.7-1~18.04 \
    python3-wheel=0.30.0-0.2 \
    # xmllint is necessary for pretty-printing generator messages
    # from bazel genrules, libxml2-utils contains xmllint
    libxml2-utils=2.9.4+dfsg1-6.1ubuntu1.3 \
    xdot=0.9-1 \
    zlib1g-dev=1:1.2.11.dfsg-0ubuntu2 && \
    apt-get clean && \
    dpkg -i /usr/tools/bazel/bazel_4.0.0-linux-x86_64.deb && \
    rm /usr/tools/bazel/bazel_4.0.0-linux-x86_64.deb && \
    mv /usr/tools/bazel/buildifier /bin/buildifier && \
    mv /usr/tools/bazel/buildozer /bin/buildozer && \
    chmod +x /bin/buildifier /bin/buildozer && \
    python3 -m pip install -U pip && \
    pip3 install -r /${BUILD_USER}/requirement.txt --ignore-installed && \
    ln -s /usr/bin/clang-format-7 /usr/bin/clang-format && \
    cd /tmp && git init && git-lfs install && \
    rm -rf .git && rm -rf /tmp/*

USER ${BUILD_USER}

ENTRYPOINT []
CMD ["/bin/bash"]
